{"ast":null,"code":"import _toConsumableArray from \"/workspaces/simpleshop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/workspaces/simpleshop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/workspaces/simpleshop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/workspaces/simpleshop/src/App.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Data from \"./Data/data\";\nimport Routes from \"./Routes/Routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar App = function App() {\n  _s();\n\n  // fetching Data from Data.js\n  var products = Data.products; // creating cartitems and usestate\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cartItems = _useState2[0],\n      setCartItems = _useState2[1]; // function for removing items from cart\n\n\n  var handleRemoveToCart = function handleRemoveToCart(product) {\n    // checking if item is already added or not\n    var ProductExits = cartItems.find(function (item) {\n      return item.id === product.id;\n    }); // if item is added in cart and checking quantity\n\n    if (ProductExits.quantity === 1) {\n      setCartItems(cartItems.filter(function (item) {\n        return item.id !== product.id;\n      }));\n    } else {\n      // decreasing cart item by 1\n      setCartItems(cartItems.map(function (item) {\n        return item.id === product.id ? _objectSpread(_objectSpread({}, ProductExits), {}, {\n          quantity: ProductExits.quantity - 1\n        }) : item;\n      }));\n    }\n  }; // function to add data in cart\n\n\n  var handleAddToCart = function handleAddToCart(product) {\n    // checking if item is already added or not\n    var ProductExits = cartItems.find(function (item) {\n      return item.id === product.id;\n    }); // if product is added in cart\n\n    if (ProductExits) {\n      setCartItems(cartItems.map(function (item) {\n        return item.id === product.id ? _objectSpread(_objectSpread({}, ProductExits), {}, {\n          quantity: ProductExits.quantity + 1\n        }) : item;\n      }));\n    } else {\n      setCartItems([].concat(_toConsumableArray(cartItems), [_objectSpread(_objectSpread({}, product), {}, {\n        quantity: 1\n      })]));\n    }\n  }; // for removing all cart Items\n\n\n  var handleCartClearence = function handleCartClearence() {\n    setCartItems([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        cartItems: cartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Routes, {\n        products: products,\n        cartItems: cartItems,\n        handleAddToCart: handleAddToCart,\n        handleRemoveToCart: handleRemoveToCart,\n        handleCartClearence: handleCartClearence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(App, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/workspaces/simpleshop/src/App.js"],"names":["React","useState","Navbar","BrowserRouter","Data","Routes","App","products","cartItems","setCartItems","handleRemoveToCart","product","ProductExits","find","item","id","quantity","filter","map","handleAddToCart","handleCartClearence"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAChB;AACA,MAAQC,QAAR,GAAqBH,IAArB,CAAQG,QAAR,CAFgB,CAIhB;;AACA,kBAAkCN,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB,iBALgB,CAOhB;;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AACtC;AACA,QAAMC,YAAY,GAAGJ,SAAS,CAACK,IAAV,CAAe,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA9B;AAAA,KAAf,CAArB,CAFsC,CAItC;;AACA,QAAIH,YAAY,CAACI,QAAb,KAA0B,CAA9B,EAAiC;AAC/BP,MAAAA,YAAY,CAACD,SAAS,CAACS,MAAV,CAAiB,UAACH,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA9B;AAAA,OAAjB,CAAD,CAAZ;AACD,KAFD,MAEO;AACL;AACAN,MAAAA,YAAY,CACVD,SAAS,CAACU,GAAV,CAAc,UAACJ,IAAD;AAAA,eACZA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAApB,mCACSH,YADT;AACuBI,UAAAA,QAAQ,EAAEJ,YAAY,CAACI,QAAb,GAAwB;AADzD,aAEIF,IAHQ;AAAA,OAAd,CADU,CAAZ;AAOD;AACF,GAjBD,CARgB,CA2BhB;;;AACA,MAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACR,OAAD,EAAa;AACnC;AACA,QAAMC,YAAY,GAAGJ,SAAS,CAACK,IAAV,CAAe,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA9B;AAAA,KAAf,CAArB,CAFmC,CAGnC;;AACA,QAAIH,YAAJ,EAAkB;AAChBH,MAAAA,YAAY,CACVD,SAAS,CAACU,GAAV,CAAc,UAACJ,IAAD;AAAA,eACZA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAApB,mCAESH,YAFT;AAGMI,UAAAA,QAAQ,EAAEJ,YAAY,CAACI,QAAb,GAAwB;AAHxC,aAKIF,IANQ;AAAA,OAAd,CADU,CAAZ;AAUD,KAXD,MAWO;AACLL,MAAAA,YAAY,8BAAKD,SAAL,oCAAqBG,OAArB;AAA8BK,QAAAA,QAAQ,EAAE;AAAxC,WAAZ;AACD;AACF,GAlBD,CA5BgB,CAgDhB;;;AACA,MAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCX,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAED,QADZ;AAEE,QAAA,SAAS,EAAEC,SAFb;AAGE,QAAA,eAAe,EAAEW,eAHnB;AAIE,QAAA,kBAAkB,EAAET,kBAJtB;AAKE,QAAA,mBAAmB,EAAEU;AALvB;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CAnED;;GAAMd,G;;KAAAA,G;AAqEN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Data from \"./Data/data\";\nimport Routes from \"./Routes/Routes\";\n\nconst App = () => {\n  // fetching Data from Data.js\n  const { products } = Data;\n\n  // creating cartitems and usestate\n  const [cartItems, setCartItems] = useState([]);\n\n  // function for removing items from cart\n  const handleRemoveToCart = (product) => {\n    // checking if item is already added or not\n    const ProductExits = cartItems.find((item) => item.id === product.id);\n\n    // if item is added in cart and checking quantity\n    if (ProductExits.quantity === 1) {\n      setCartItems(cartItems.filter((item) => item.id !== product.id));\n    } else {\n      // decreasing cart item by 1\n      setCartItems(\n        cartItems.map((item) =>\n          item.id === product.id\n            ? { ...ProductExits, quantity: ProductExits.quantity - 1 }\n            : item\n        )\n      );\n    }\n  };\n\n  // function to add data in cart\n  const handleAddToCart = (product) => {\n    // checking if item is already added or not\n    const ProductExits = cartItems.find((item) => item.id === product.id);\n    // if product is added in cart\n    if (ProductExits) {\n      setCartItems(\n        cartItems.map((item) =>\n          item.id === product.id\n            ? {\n                ...ProductExits,\n                quantity: ProductExits.quantity + 1\n              }\n            : item\n        )\n      );\n    } else {\n      setCartItems([...cartItems, { ...product, quantity: 1 }]);\n    }\n  };\n\n  // for removing all cart Items\n  const handleCartClearence = () => {\n    setCartItems([]);\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar cartItems={cartItems} />\n        <Routes\n          products={products}\n          cartItems={cartItems}\n          handleAddToCart={handleAddToCart}\n          handleRemoveToCart={handleRemoveToCart}\n          handleCartClearence={handleCartClearence}\n        />\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}